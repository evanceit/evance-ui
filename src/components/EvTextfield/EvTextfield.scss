@use "../../css/mixins";

/**
    # EvTextField
 */
.ev-textfield--control {
    align-items: center;
    background: var(--input-background);
    border: var(--input-border);
    border-radius: var(--input-radius);
    display: flex;
    flex-wrap: nowrap;
    gap: var(--spacer-50);
    min-height: var(--input-height-medium);
    padding-inline: var(--spacer-100);
    position: relative;
    transition: border-color 0.25s ease-in-out, box-shadow 0.25s ease-in-out, background 0.25s ease-in-out;
    will-change: border-color, box-shadow, background;

    > * {
        flex: 0 0 auto;
        display: flex;
    }
}

.ev-textfield--prefix,
.ev-textfield--suffix {
    padding-inline: var(--spacer-50);
}

/** Size modifiers */
.ev-textfield--control {
    &.is-size-small {
        min-height: var(--input-height-small);
        padding-inline: var(--spacer-100);
    }
    &.is-size-large {
        min-height: var(--input-height-large);
        padding-inline: var(--spacer-150);
    }
}

/** Input */
.ev-textfield--input {
    align-self: stretch;
    flex: 1 1 auto;
    display: flex;
    align-items: center;
    position: relative;
    flex-wrap: wrap;
    min-width: 0;
    width: min-content;
    gap: 4px;

    > input {
        background: transparent;
        border: 0;
        color: inherit;
        display: block;
        height: 100%;
        margin: 0;
        outline: none;
        padding: 0;
        flex: 1;
        padding-inline: var(--spacer-50);
    }
}


/** Loader */
.ev-textfield--loader {
    bottom: 0;
    left: 0;
    position: absolute;
    width: 100%;
}


/** Clearable */
.ev-textfield {
    .ev-textfield--clearable {
        opacity: 0;
        transition: opacity 0.25s ease-in-out;
    }

    &:hover,
    &.is-focused {
        .ev-textfield--clearable {
            opacity: 1;
        }
    }
}


/* Enter and leave animations */
.ev-textfield {

    .slide-fade {
        &-enter-active {
            transition: all 0.25s ease-out;
        }
        &-leave-active {
            transition: all 0.25s cubic-bezier(1, 0.5, 0.8, 1);
        }
        &-enter-from,
        &-leave-to {
            opacity: 0;
            transform: translateX(20px);
        }
    }

    .fade-in-out {
        &-enter-active {
            transition: opacity 0.25s ease-out;
        }
        &-leave-active {
            transition: opacity 0.25s cubic-bezier(1, 0.5, 0.8, 1);
        }
        &-enter-from,
        &-leave-to {
            opacity: 0;
        }
    }
}


/** Rounded modifier */
.ev-textfield--control {
    &.is-rounded {
        border-radius: 999px;
    }
}


/**
    ## Appearance

    EvTextfield can have the following appearance modifiers:
    - is-appearance-subtle
    - is-appearance-none
 */
.ev-textfield--control {

    &.is-appearance-button {
        border-color: transparent;
        background-color: var(--fill-neutral);

        &:hover {
            background-color: var(--fill-neutral-hovered);
        }

        &.is-focused {
            background-color: var(--fill-neutral-hovered);
        }
    }

    &.is-appearance-subtle {
        border-color: transparent;

        &:hover {
            border-color: var(--stroke-input);
        }

        &.is-focused {
            border-color: var(--stroke-focused);
        }
    }

    &.is-appearance-none {
        border-color: transparent !important;
        box-shadow: none !important;
    }
}


/** Focused */
.ev-textfield {
    &.is-focused {
        .ev-textfield--control {
            border-color: var(--stroke-focused);
            box-shadow: var(--input-shadow-focus);
        }
    }
}


/** Disabled */
.ev-textfield {
    &.is-disabled {
        @include mixins.is-disabled;
    }
}


/** Error */
.ev-textfield {
    &.is-error {
        .ev-textfield--control {
            border-color: var(--stroke-danger);
        }

        &.is-focused {
            .ev-textfield--control {
                box-shadow: var(--input-shadow-error);
            }
        }
    }
}

/** Labelling */
.ev-textfield--label {
    label {
        display: block;
        padding-bottom: 0.5rem;
    }
}


/** Errors */
.ev-textfield--errors {
    margin-top: 0.5rem;
}

.ev-textfield--control {
    &.is-align-left {
        .ev-textfield--input-native {
            text-align: left;
        }
    }
    &.is-align-center {
        .ev-textfield--input-native {
            text-align: center;
        }
    }
    &.is-align-right {
        .ev-textfield--input-native {
            text-align: right;
        }
    }
}


.ev-textfield--control {
    &.is-monospace {
        .ev-textfield--input-native {
            font-family: var(--typeface-monospace);
        }
    }
}