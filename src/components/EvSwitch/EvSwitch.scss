@use "../../css/mixins";

/**
    EvSwitch
 */
.ev-switch {
    display: inline-flex;
    outline: none;
    position: relative;

    &.is-labelled {
        display: flex;
        align-items: start;
    }
}

.ev-switch--control {
    align-items: center;
    aspect-ratio: 1;
    display: inline-flex;
    justify-content: center;
    position: relative;
    width: 40px;
    font-size: 16px;
}


/** Track */
.ev-switch--track {
    background: var(--stroke-input);
    border-radius: 999px;
    display: inline-flex;
    height: 1.5em;
    width: 2.5em;
    overflow: hidden;
    position: relative;

    &:after {
        border-radius: inherit;
        content: '';
        height: 100%;
        width: 100%;
        position: absolute;
        left: -100%;
        background: var(--color-primary);
        transition: transform 0.25s ease-in-out;
        will-change: transform;
    }
}


/** Thumb */
.ev-switch--thumb {
    display: inline-flex;
    width: 1em;
    height: 1em;
    background: var(--surface-default);
    border-radius: 50%;
    position: absolute;
    align-items: center;
    justify-content: center;
    left: 0;
    margin: 0.25em;
    transition: transform 0.25s ease-in-out;
    will-change: transform;

    &:after,
    &:before {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        width: 100%;
        border-radius: 50%;
        transform: translate(-50%, -50%);
        aspect-ratio: 1;
    }

    &:after {
        background: var(--surface-default);
    }

    &:before {
        background: var(--input-focus-background);
        width: 100%;
        opacity: 0;
        transition: width 0.25s ease-in-out,
                    opacity 0.25s ease-in-out;
        will-change: width, opacity;
    }
}


/** Checked state modifier */
.ev-switch {
    &.is-checked {
        .ev-switch--track {
            &:after {
                transform: translateX(100%);
            }
        }

        .ev-switch--thumb {
            transform: translateX(calc(2em - 100%));
        }
    }
}


/** Native input */
.ev-switch {
    input {
        outline: none;
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        opacity: 0;
        cursor: pointer;
    }
}


/** Hover state modifier */
.ev-switch {
    &:hover {
        .ev-switch--thumb {
            &:before {
                width: 42px;
                opacity: 1;
            }
        }
    }
}


/** Focus visible state modifier */
.ev-switch {
    &.is-focused-visible {
        .ev-switch--track {
            outline: 2px solid var(--stroke-focused);
            outline-offset: 2px;
        }
    }
}


/** Disabled modifier */
.ev-switch {
    &.is-disabled {
        @include mixins.is-disabled;
    }
}


/** Error modifier */
.ev-switch {
    &.is-error {

        .ev-switch--track {
            outline: 2px solid var(--stroke-danger);
            outline-offset: 2px;

            &:after {
                background: var(--fill-danger-bold);
            }
        }
    }
}


/** Labelling */
.ev-switch--label {
    flex: 1;

    label {
        display: block;
        padding: 0.5rem 0.5rem 0.5rem 1rem;
    }
}


/** Errors */
.ev-switch--errors {
    padding-left: 1rem;
}