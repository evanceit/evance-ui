@use "../../css/mixins";

$indicator-width: 3px;

.ev-list-item {
    --list-item-height: var(--input-height-medium);
    display: grid;
    grid-template-areas: "icon-start prefix content suffix actions icon-end";
    grid-template-columns: minmax(0, auto) minmax(0, auto) 1fr minmax(0, auto) minmax(0, auto) minmax(0, auto);
    grid-template-rows: 1fr;
    user-select: none;
    align-items: center;
    margin: 2px;
    min-height: var(--list-item-height);
    border-radius: var(--input-radius);
    transition: background 0.15s ease-in-out, color 0.15s ease-in-out;
    outline: 0;

    a:link,
    a:visited,
    a:active {
        color: inherit;
        font-weight: var(--text-weight);
        text-decoration: none;
    }

    &.is-clickable {
        &:hover {
            color: inherit;
            background: var(--fill-neutral);

            a {
                color: inherit;
                text-decoration: none;
            }
        }
    }

    > * {
        width: min-content;
    }
}

.ev-list-item {
    &.is-clickable {
        cursor: pointer;
    }
}

.ev-list-item {
    &[disabled],
    &.is-disabled {
        @include mixins.is-disabled;
    }
}

.ev-list-item {
    > *:last-child {
        &:has(.ev-button) {
            margin-right: 6px;
        }
    }
    > *:nth-child(2) {
        &:has(.ev-button) {
            margin-left: 4px;
            margin-right: -8px;
        }
    }
}

.ev-list-item {

    &.is-active {
        color: var(--text-selected);

        &.is-clickable {
            &:hover {
                color: var(--text-selected);
                background: var(--fill-selected);
            }
        }
    }

    &.is-active--exact {
        color: var(--text-selected);
        background: var(--fill-selected);

        &.is-clickable {
            &:hover {
                color: var(--text-selected);
                background: var(--fill-selected-hovered);
            }
        }

        .ev-list-item--indicator {
            opacity: 1;
            &:before {
                transform: translateX(0);
            }
        }
    }
}

.ev-list-item {
    &--icon-start,
    &--prefix {
        display: inline-flex;
        margin-left: 8px;
        margin-right: -4px;
        min-height: var(--list-item-height);
        align-items: center;

        &:not(:has(button, a)) {
            pointer-events: none;
        }
    }
}

.ev-list-item--icon-start {
    grid-area: icon-start;
}

.ev-list-item--prefix {
    grid-area: prefix;
}

.ev-list-item--button {
    display: grid;
    grid-column: 1 / -1;
    grid-row: 1;
    align-items: center;
    grid-template-rows: subgrid;
    grid-template-columns: subgrid;
    position: relative;
    border-radius: var(--input-radius);
    padding-block: 8px;

    &:focus-visible {
        color: inherit;
        background: var(--fill-neutral);
        text-decoration: none;
    }

    &:focus-visible {
        outline: 2px solid var(--stroke-focused);
        outline-offset: 2px;
    }
}

.ev-list-item--content {
    grid-area: content;
    margin-inline: 16px;
    min-width: 0;
}

.ev-list-item {
    &--suffix,
    &--actions,
    &--icon-end {
        display: inline-flex;
        margin-left: -4px;
        margin-right: 8px;
        min-height: var(--list-item-height);
        align-items: center;

        &:not(:has(button, a)) {
            pointer-events: none;
        }
    }
}

.ev-list-item--suffix {
    grid-area: suffix;
}

.ev-list-item--actions {
    grid-area: actions;

    .is-show-on-hover {
        display: none;

        .ev-list-item:hover & {
            display: inline-flex;
        }
    }
}

.ev-list-item {
    &.is-actions-on-hover  {
        &:hover {
            .ev-list-item--suffix{
                display: none;
            }
        }
    }
}

.ev-list-item--icon-end {
    grid-area: icon-end;
}



.ev-list-item--indicator {
    position: absolute;
    width: $indicator-width;
    height: 100%;
    border-top-left-radius: var(--input-radius);
    border-bottom-left-radius: var(--input-radius);
    left: 0;
    opacity: 0;
    overflow: hidden;
    top: 0;
    transition: opacity 0.25s ease-in-out;
    will-change: opacity;

    &:before {
        content: '';
        position: absolute;
        display: block;
        height: 100%;
        width: 100%;
        background: var(--text-selected);
        transition: transform 0.25s ease-in-out;
        transform: translateX(-100%);
        top: 0;
        left: 0;
        will-change: transform;
    }
}