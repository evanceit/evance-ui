
@use "@/css/settings";
@use "@/css/tools/functions" as *;

:root {

    /* Font Stacks */
    --system-font: ui-sans-serif, system-ui, -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Ubuntu, "Helvetica Neue", Arial, sans-serif;
    --monospace-font: ui-monospace, Menlo, Monaco, "Cascadia Code", "Segoe UI Mono", "Roboto Mono", "Ubuntu Monospace", "Courier New", monospace;

    /* Font weights */
    --font-weight-regular: 400;
    --font-weight-medium: 500;
    --font-weight-semibold: 600;
    --font-weight-bold: 700;
    --font-weight-extrabold: 800;

    /* Icons */
    --icon-size-small: 16px;
    --icon-size-medium: 24px;
    --icon-size-large: 32px;

    /* Input fields */
    --input-height-x-small: 32px;
    --input-height-small: 36px;
    --input-height-medium: 42px;
    --input-height-large: 48px;
    --input-height-x-large: 56px;
    --input-radius: 3px;
    --input-border: 1px solid var(--stroke-input);
    --input-font-size: 1rem;

    /** Rounded */
    --rounded-x-small: 2px;
    --rounded-small: 4px;
    --rounded-medium: 8px;
    --rounded-large: 16px;
    --rounded-x-large: 32px;
    --rounded-circle: 50%;
    --rounded-pill: 9999px;


    /* Spacers */
    --spacer-0: 0;
    @each $key in map_keys(settings.$spacers) {
        --spacer-#{$key}: #{map-get(settings.$spacers, $key)};
    }
    @each $key in map_keys(settings.$negative-spacers) {
        --spacer-#{$key}: #{map-get(settings.$negative-spacers, $key)};
    }

    /* Text */
    --heading-lineheight: 1.25em;
    --heading-style: normal;
    --heading-typeface: var(--system-font);
    --heading-weight: 500;
    --heading-weight-bold: 800;
    @each $key, $value in settings.$headings {
        $min: map-get($value, min);
        $max: map-get($value, max);
        --heading-size-#{$key}: #{scalable($min, $max, settings.$scale-from, settings.$scale-to)};
    }
    @each $key, $value in settings.$text {
        $min: map-get($value, min);
        $max: map-get($value, max);
        --text-size-#{$key}: #{scalable($min, $max, settings.$scale-from, settings.$scale-to)};
    }
    --text-eyebrow-transform: uppercase;
    --text-eyebrow-typeface: var(--system-font);
    --text-eyebrow-weight: 700;
    --text-weight: 400;
    --text-weight-bold: 700;

    /* Easing */
    --easing-standard: cubic-bezier(0.4, 0, 0.2, 1);
    --easing-accelerate: cubic-bezier(0.4, 0, 1, 1);
    --easing-decelerate: cubic-bezier(0.0, 0, 0.2, 1);


    --padding-x-large: #{scalable(1.5rem, 3rem, settings.$scale-from, settings.$scale-to)};
    --padding-large: #{scalable(1.5rem, 2rem, settings.$scale-from, settings.$scale-to)};
    --padding-medium: #{scalable(1rem, 1.5rem, settings.$scale-from, settings.$scale-to)};
    --padding-small: 1rem;
}

