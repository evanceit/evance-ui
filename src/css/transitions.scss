
/*
    # Transition Defaults
 */
@mixin transition-default() {
    &-enter-active {
        transition-duration: 0.25s !important;
        transition-timing-function: var(--easing-standard, ease-in-out) !important;
    }

    &-leave-active {
        transition-duration: 0.25s !important;
        transition-timing-function: var(--easing-standard, ease-in-out) !important;
    }

    &-move {
        transition-duration: 0.5s !important;
        transition-property: transform !important;
        transition-timing-function: var(--easing-standard, ease-in-out) !important;
    }
}

/**
    # Fade Out Transition
 */
@mixin fade-out() {
    &-leave-to {
        opacity: 0;
    }
    &-leave-active {
        transition-duration: 100ms !important;
    }
}


/**
    # Fade Transition
 */
.transition-fade {
    @include transition-default();

    &-leave-from {
        opacity: 1;
    }

    &-enter-from,
    &-leave-to {
        opacity: 0 !important;
    }

    &-enter-active,
    &-leave-active {
        transition-property: opacity !important;
    }
}

/**
    # Scale Transition
 */
.transition-scale {
    @include transition-default();
    @include fade-out();

    &-enter-from {
        opacity: 0;
        transform: scale(0);
    }

    &-enter-active,
    &-leave-active {
        transition-property: transform, opacity !important;
    }
}

.transition-slide-up {
    @include transition-default();
    @include fade-out();

    &-enter-from {
        transform: translateY(30px);
    }

    &-leave-to {
        transform: translateY(-30px);
    }
}


/**
    EvMenu Transition

    The EvMenuTransition component uses a CSS transition when no target element is available.
    Otherwise it will use a JavaScript animation.
 */
.ev-menu-transition {
    &-enter-active {
        transition-duration: 250ms !important;
        transition-timing-function: var(--easing-standard) !important;
    }

    &-leave-active {
        transition-duration: 125ms !important;
        transition-timing-function: var(--easing-decelerate) !important;
    }

    &-enter-active,
    &-leave-active {
        transition-property: transform, opacity !important;
        pointer-events: none;
    }

    &-enter-from,
    &-leave-to {
        transform: scale(0.9);
        opacity: 0;
    }

    &-enter-to,
    &-leave-from {
        opacity: 1;
    }
}


/**
    EvDialog Transition

 */
.ev-dialog-transition {
    &-enter-active {
        transition-duration: 225ms !important;
        transition-timing-function: var(--easing-decelerate) !important;
    }

    &-leave-active {
        transition-duration: 125ms !important;
        transition-timing-function: var(--easing-accelerate) !important;
    }

    &-enter-active,
    &-leave-active {
        transition-property: transform, opacity !important;
        pointer-events: none;
    }
}

.ev-dialog-transition {
    &-enter-from,
    &-leave-to {
        transform: scale(0.9) translateY(2rem);
        opacity: 0;
    }

    &-enter-to,
    &-leave-from {
        opacity: 1;
    }
}


.scale-rotate-transition {
    @include transition-default();
    @include fade-out();

    &-enter-from {
        opacity: 0;
        transform: scale(0) rotate(-45deg);
    }

    &-enter-active,
    &-leave-active {
        transition-property: transform, opacity !important;
    }
}